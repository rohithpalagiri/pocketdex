{"version":3,"sources":["images/status.svg","services/pokemon.jsx","components/PokemonTile.jsx","components/Loaders/Loader.jsx","components/Home.jsx","components/StatsChart.jsx","components/QuickInfo.jsx","components/EvolutionChain.jsx","components/Moves.jsx","components/TypeEffective.jsx","components/PokedexEntry.jsx","components/MenuBar.jsx","App.js","index.js","../node_modules/typescript/lib sync","images/pokeball.svg","images/pikachu-running.gif","images/male.svg","images/female.svg","images/physical.svg","images/special.svg"],"names":["module","exports","axios","get","then","response","data","id","PokemonTile","tileClass","useState","pokemonData","setPokemonData","hasMultipleTypes","setHasMultipleTypes","useEffect","a","url","types","length","fetchData","classNames","type","name","className","to","sprites","src","front_default","alt","Pokeball","useStyles","makeStyles","theme","itemRoot","display","justifyContent","typographyRoot","marginTop","Loader","variant","classes","Grid","container","item","xs","PikachuLoader","Typography","Home","pokemonList","fetchMorePokemon","filterPokemon","dataLength","next","hasMore","style","flexWrap","loader","endMessage","textAlign","map","x","elevation","key","StatsChart","chartData","options","chart","height","toolbar","show","plotOptions","bar","horizontal","tooltip","enabled","dataLabels","textAnchor","offsetX","offsetY","xaxis","categories","labels","axisBorder","grid","series","stats","component","GridContainer","marginBottom","paperRoot","padding","backgroundColor","width","alignItems","capitalize","str","charAt","toUpperCase","slice","QuickInfo","rate","quickInfo","Paper","md","weight","catchRate","genderRate","Male","Female","eggGroups","i","abilities","root","heading","textTransform","fontWeight","fontSize","typography","pxToRem","accordionSummaryContent","AccordionDetails","Moves","moves","levelMoves","setLevelMoves","machineMoves","setMachineMoves","learnByLevel","filter","method","sort","b","level","learnByMachine","gutterBottom","foundMove","FullMovesDataSet","find","n","move","classType","Accordion","AccordionSummary","expandIcon","content","aria-controls","description","flavor_text","Physical","Special","pp","accuracy","power","typeRowRoot","damageValue","TypeEffective","pkmTypes","typeArray","setTypeArray","TYPES","TYPE_ORDER","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","TYPE_CHART","type1","type2","effectsArr","Object","keys","index","effect","push","PkmEntry","breakpoints","up","marginLeft","PkmSpecies","down","PokedexEntry","pokemonKey","useParams","isLoaded","setIsLoaded","pokemon","setPokemon","setEvolution","genus","setGenus","setTypes","setDescription","setStats","setQuickInfo","setMoves","userService","console","log","pkm","species","evolutionChain","chain","genera","language","langDescription","flavor_text_entries","base_stat","moveSet","lastDataModule","version_group_details","pop","level_learned_at","move_learn_method","capture_rate","egg_groups","gender_rate","ability","Fragment","other","replace","spacing","grow","flexGrow","menuButton","marginRight","paddingLeft","title","search","position","borderRadius","shape","fade","palette","common","white","transition","searchIcon","pointerEvents","inputRoot","color","inputInput","transitions","create","opacity","sectionDesktop","toolbarRoot","margin","appBarRoot","linkStyle","textDecoration","MenuBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","event","currentTarget","aria-haspopup","AppBar","Toolbar","Box","edge","noWrap","InputBase","placeholder","input","inputProps","onChange","e","maxWidth","paddingRight","paddingTop","App","setPokemonList","initialPokemonList","setinitialPokemonList","count","setCount","results","newPokemon","concat","value","target","FullPokemonList","includes","path","ReactDOM","render","document","getElementById","webpackEmptyContext","req","Error","code","resolve"],"mappings":"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","file":"static/js/main.638ed1f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/status.04daf9f5.svg\";","import axios from 'axios'\r\nconst baseUrl = '/'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(`${baseUrl}api/pokedex`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getPkm = (id) => {\r\n    const request = axios.get(`${baseUrl}api/pokedex/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, getPkm }","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Pokeball from '../images/pokeball.svg';\r\nimport classNames from \"classnames\"\r\nimport axios from \"axios\";\r\n\r\nconst PokemonTile = ({ data }) => {\r\n\r\n    const [pokemonData, setPokemonData] = useState([]);\r\n    const [hasMultipleTypes, setHasMultipleTypes] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let response = await axios.get(data.url);\r\n            let types = response.data.types.length > 1 ? true : false;\r\n            setHasMultipleTypes(types);\r\n            setPokemonData(response.data)\r\n            return response;\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    let tileClass;\r\n\r\n    //TODO: There has to be a better way to run this\r\n    if(pokemonData.types){\r\n        if (hasMultipleTypes) {\r\n            tileClass = classNames('pokemonTile', `primary-${pokemonData.types[0].type.name}`, `secondary-${pokemonData.types[1].type.name}`);\r\n        } else {\r\n            tileClass = classNames('pokemonTile', `solid-${pokemonData.types[0].type.name}`)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            {pokemonData.types && <li className={tileClass}>\r\n                <Link to={`/pokedex/${pokemonData.id}`}>\r\n                    {pokemonData.sprites ? <img src={pokemonData.sprites.front_default} alt=\"pokemon-sprite\" /> : <img src={Pokeball} alt=\"pokeball\" />}\r\n                    <div className={\"pokemon-name\"}>\r\n                        {pokemonData.name}\r\n                    </div>\r\n                </Link>\r\n            </li>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PokemonTile;\r\n\r\n","import React from 'react';\r\nimport PikachuLoader from '../../images/pikachu-running.gif';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    itemRoot: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    typographyRoot: {\r\n        marginTop: '1rem !important',\r\n    }\r\n}));\r\n\r\nconst Loader = ({variant}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={`loader-container ${variant}`}>\r\n            <Grid container>\r\n                <Grid item className={classes.itemRoot} xs={12}>\r\n                    <img className=\"loader-img\" src={PikachuLoader} alt=\"pikachu-loader\" />\r\n                </Grid>\r\n                <Grid item className={classes.itemRoot} xs={12}>\r\n                    <Typography className={classes.typographyRoot} variant=\"h5\">\r\n                        Loading...\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PokemonTile from './PokemonTile';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Loader from './Loaders/Loader'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\nconst Home = ({ pokemonList, fetchMorePokemon, filterPokemon }) => {\r\n\r\n    const style = {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12}>\r\n                <ul>\r\n                    <InfiniteScroll\r\n                        dataLength={pokemonList.length}\r\n                        next={fetchMorePokemon}\r\n                        hasMore={true}\r\n                        style={style}\r\n                        loader={<Loader variant={'infinite-scroll'}/>}\r\n                        endMessage={\r\n                            <p style={{ textAlign: 'center' }}>\r\n                                <b>Yay! You have seen it all</b>\r\n                            </p>\r\n                        }\r\n                    >\r\n                        {pokemonList.map((x) => {\r\n                            return <PokemonTile elevation={3} key={x.name} data={x} />\r\n                        })}\r\n                    </InfiniteScroll>\r\n                </ul>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//TODO Need to fix loading animation of bars\r\nconst StatsChart = ({ stats }) => {\r\n\r\n    let chartData = {\r\n        options: {\r\n            chart: {\r\n                type: 'bar',\r\n                height: 300,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n            tooltip: {\r\n                enabled: false,\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                textAnchor: 'middle',\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n            },\r\n            xaxis: {\r\n                categories: ['HP', 'Attack', 'Defense', 'Special Attack', 'Special Defense', 'Speed'],\r\n                labels: {\r\n                    show: false,\r\n                },\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n            },\r\n            grid: {\r\n                show: false,\r\n            },\r\n            series: [{\r\n                data: stats\r\n            }],\r\n        },\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Typography component={'div'}>\r\n            <Chart options={chartData.options} series={chartData.options.series} type=\"bar\" height={300} />\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default StatsChart","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Male from '../images/male.svg'\r\nimport Female from '../images/female.svg'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    GridContainer: {\r\n        marginBottom: '1rem',\r\n    },\r\n    paperRoot: {\r\n        height: '100%',\r\n        padding: '25px',\r\n        backgroundColor: 'aliceBlue',\r\n        width: '100%',\r\n    },\r\n    typographyRoot: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nfunction capitalize(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst QuickInfo = ({ quickInfo }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let genderRatio = (rate) => {\r\n        return (<><img className=\"info-icon\" src={Male} /> {(rate / 8) * 100}% <img className=\"info-icon ml-1\" src={Female} />  {(1 - (rate / 8)) * 100}%</>)\r\n    }\r\n\r\n    return (\r\n        <Paper className=\"info-card\" className={classes.paperRoot} elevation={3}>\r\n            <Typography className={classes.typographyRoot} component={'div'}> \r\n                <Grid container >\r\n                    <Grid item xs={12} md={6} className={classes.GridContainer}>\r\n                        <b>Height:</b> {quickInfo.height / 10} m\r\n                        </Grid>\r\n                    <Grid item xs={12} md={6} className={classes.GridContainer}>\r\n                        <b>Weight:</b> {quickInfo.weight / 100} kg\r\n                        </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12} md={6} className={classes.GridContainer}>\r\n                        <b>Catch Rate:</b> {quickInfo.catchRate}\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} className={classes.GridContainer}>\r\n                        <b>Gender:</b> {quickInfo.genderRate === -1 ? 'N/A' : genderRatio(quickInfo.genderRate)}\r\n                         </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12} md={6} className={classes.GridContainer}>\r\n                        <b>Egg Groups:</b> {quickInfo.eggGroups && quickInfo.eggGroups.map((x, i) => <span key={i}>\r\n                            {i > 0 && \", \"}\r\n                            {capitalize(x)}\r\n                        </span>)}\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} className={classes.GridContainer}>\r\n                        <b>Abilities:</b> {quickInfo.abilities && quickInfo.abilities.map((x, i) => <span key={i}>\r\n                            {i > 0 && \", \"}\r\n                            {capitalize(x)}\r\n                        </span>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Typography>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default QuickInfo","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    GridContainer: {\r\n        marginBottom: '1rem',\r\n    },\r\n    paperRoot: {\r\n        height: '100%',\r\n        padding: '25px',\r\n        backgroundColor: 'aliceBlue',\r\n        width: '100%',\r\n    },\r\n    typographyRoot: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\n\r\nconst EvolutionChain = ({ evolutionChain }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className=\"info-card\" className={classes.paperRoot} elevation={3}>\r\n            <Typography className={classes.typographyRoot} component={'div'}>\r\n                <Grid container >\r\n                    <Grid item xs={12} md={6} className={classes.GridContainer}>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n            </Typography>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default EvolutionChain;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport MoveList from '../moves.json'\r\nimport FullMovesDataSet from '../FullMovesDataSet.json'\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport Physical from '../images/physical.svg';\r\nimport Special from '../images/special.svg';\r\nimport Status from '../images/status.svg';\r\nimport axios from \"axios\";\r\nimport { createBuilderStatusReporter } from 'typescript';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        textTransform: 'capitalize',\r\n        fontWeight: 'bold',\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    accordionSummaryContent: {\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    paperRoot: {\r\n        padding: '3rem',\r\n    },\r\n    AccordionDetails: {\r\n        backgroundColor: 'lightsteelblue'\r\n    }\r\n}));\r\n\r\n//TODO Need to fix loading animation of bars\r\nconst Moves = ({ moves }) => {\r\n\r\n    const [levelMoves, setLevelMoves] = useState()\r\n    const [machineMoves, setMachineMoves] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        //Use this to grab all of the data\r\n\r\n        // Promise.all(MoveList.map((x, index) => {\r\n        //     return axios.get(x.url);\r\n        // })).then((res) => {\r\n        //     let final = []\r\n        //     res.map((x) => {\r\n        //         let id = x.data.id;\r\n        //         let name= x.data.name;\r\n        //         let accuracy = x.data.accuracy;\r\n        //         let pp = x.data.pp;\r\n        //         let power = x.data.power;\r\n        //         let type = x.data.type.name;\r\n        //         let classType = x.data.damage_class\r\n        //         let description = x.data.flavor_text_entries.filter((x) => x.language.name === \"en\")[0]\r\n\r\n        //         final.push({\r\n        //             id: id,\r\n        //             name: name,\r\n        //             accuracy: accuracy,\r\n        //             power: power,\r\n        //             pp: pp,\r\n        //             type: type,\r\n        //             description: description,\r\n        //             classType: classType\r\n        //         })\r\n        //     })\r\n        // })\r\n\r\n        if (moves) {\r\n            let learnByLevel = moves.filter((x) => x.method === \"level-up\").sort((a, b) => a.level < b.level ? -1 : 1)\r\n            setLevelMoves(learnByLevel)\r\n\r\n            let learnByMachine = moves.filter((x) => x.method === \"machine\")\r\n            setMachineMoves(learnByMachine)\r\n        }\r\n\r\n    }, [moves]);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className=\"info-card\" elevation={3}>\r\n            <Typography component={'div'}>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            Level Up\r\n                            </Typography>\r\n                        {levelMoves && levelMoves.map((x) => {\r\n                            let foundMove = FullMovesDataSet.find((n) => x.move === n.name)\r\n\r\n                            let classType = foundMove.classType.name\r\n                            return (\r\n                                <>\r\n                                    <Accordion>\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            classes={{\r\n                                                content: classes.accordionSummaryContent,\r\n                                            }}\r\n                                            aria-controls={`${x.move}-content`}\r\n                                            id={x.move}\r\n                                        >\r\n\r\n                                            <div className=\"center\">\r\n                                                <div className=\"level-badge\">\r\n                                                    {x.level}\r\n                                                </div>\r\n                                                <Typography className={classes.heading}>{x.move}</Typography>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className={`badge badge-${foundMove.type}`}>{foundMove.type}</div>\r\n                                            </div>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails className={classes.AccordionDetails}>\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography className=\"mb-2 mt-0\">\r\n                                                        {foundMove.description.flavor_text}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    <Grid container>\r\n                                                        <Grid className=\"align-center\" item xs={12} md={3}>\r\n                                                            {/* TODO Probably a better way to implement this */}\r\n\r\n                                                            {classType === 'physical' ? <img className=\"class-icon\" src={Physical} /> : <img className=\"class-icon\" src={Special} />} {classType === 'physical' ? 'Physical' : 'Special'}\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} md={3}>\r\n                                                            <b>PP:</b> {foundMove.pp}\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} md={3}>\r\n                                                            <b>Accuracy:</b> {foundMove.accuracy ? foundMove.accuracy : 'N/A'}\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} md={3}>\r\n                                                            <b>Power:</b> {foundMove.power ? foundMove.power : 'N/A'}\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                </>\r\n                            )\r\n                        })}\r\n\r\n                        <Typography variant=\"h5\" className=\"mt-3\" gutterBottom>\r\n                            TM\r\n                            </Typography>\r\n                        {machineMoves && machineMoves.map((x) => {\r\n                            let foundMove = FullMovesDataSet.find((n) => x.move === n.name)\r\n                            return (\r\n                                <>\r\n                                    <Accordion >\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            classes={{\r\n                                                content: classes.accordionSummaryContent,\r\n                                            }}\r\n                                            aria-controls={`${x.move}-content`}\r\n                                            id={x.move}\r\n                                        >\r\n                                            <div className=\"center\">\r\n                                                <AlbumIcon className=\"mr-2\" />\r\n                                                <Typography className={classes.heading}>{x.move}</Typography>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className={`badge badge-${foundMove.type}`}>{foundMove.type}</div>\r\n                                            </div>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <Typography>\r\n                                                {foundMove.description.flavor_text}\r\n                                            </Typography>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Typography>\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default Moves","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    typeRowRoot: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        // padding: '8px 0px'\r\n    },\r\n    damageValue: {\r\n        fontSize: '0.75rem'\r\n    }\r\n});\r\n\r\nconst TypeEffective = ({ pkmTypes }) => {\r\n    const [typeArray, setTypeArray] = useState([]);\r\n    var TYPES = [\"normal\", \"fire\", \"water\", \"electric\", \"grass\", \"ice\", \"fighting\", \"poison\", \"ground\", \"flying\", \"psychic\", \"bug\", \"rock\", \"ghost\", \"dragon\", \"dark\", \"steel\"];\r\n\r\n    const classes = useStyles();\r\n\r\n    var TYPE_ORDER = {\r\n        normal: 0,\r\n        fire: 1,\r\n        water: 2,\r\n        electric: 3,\r\n        grass: 4,\r\n        ice: 5,\r\n        fighting: 6,\r\n        poison: 7,\r\n        ground: 8,\r\n        flying: 9,\r\n        psychic: 10,\r\n        bug: 11,\r\n        rock: 12,\r\n        ghost: 13,\r\n        dragon: 14,\r\n        dark: 15,\r\n        steel: 16\r\n    };\r\n\r\n    var TYPE_CHART = {\r\n        normal: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 0, 1, 1, 0.5],\r\n        fire: [1, 0.5, 0.5, 1, 2, 2, 1, 1, 1, 1, 1, 2, 0.5, 1, 0.5, 1, 2],\r\n        water: [1, 2, 0.5, 1, 0.5, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0.5, 1, 1],\r\n        electric: [1, 1, 2, 0.5, 0.5, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0.5, 1, 1],\r\n        grass: [1, 0.5, 2, 1, 0.5, 1, 1, 0.5, 2, 0.5, 1, 0.5, 2, 1, 0.5, 1, 0.5],\r\n        ice: [1, 0.5, 0.5, 1, 2, 0.5, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 0.5],\r\n        fighting: [2, 1, 1, 1, 1, 2, 1, 0.5, 1, 0.5, 0.5, 0.5, 2, 0, 1, 2, 2],\r\n        poison: [1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 1, 1, 1, 0.5, 0.5, 1, 1, 0],\r\n        ground: [1, 2, 1, 2, 0.5, 1, 1, 2, 1, 0, 1, 0.5, 2, 1, 1, 1, 2],\r\n        flying: [1, 1, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 0.5],\r\n        psychic: [1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0.5, 1, 1, 1, 1, 0, 0.5],\r\n        bug: [1, 0.5, 1, 1, 2, 1, 0.5, 0.5, 1, 0.5, 2, 1, 1, 0.5, 1, 2, 0.5],\r\n        rock: [1, 2, 1, 1, 1, 2, 0.5, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 0.5],\r\n        ghost: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 0.5],\r\n        dragon: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 0.5],\r\n        dark: [1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 0.5],\r\n        steel: [1, 0.5, 0.5, 0.5, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0.5]\r\n    };\r\n\r\n    useEffect(() => {\r\n        let type1 = TYPE_ORDER[pkmTypes[0]]\r\n        let type2 = TYPE_ORDER[pkmTypes[1]]\r\n\r\n        let effectsArr = []\r\n\r\n        if (pkmTypes.length > 1) {\r\n            Object.keys(TYPE_CHART).map((key, index) => {\r\n                let effect = TYPE_CHART[key][type1] * TYPE_CHART[key][type2]\r\n                effectsArr.push(effect)\r\n            })\r\n        } else {\r\n            Object.keys(TYPE_CHART).map((key, index) => {\r\n                let effect = TYPE_CHART[key][type1]\r\n                effectsArr.push(effect)\r\n            })\r\n        }\r\n        setTypeArray(effectsArr)\r\n    }, [pkmTypes]);\r\n\r\n    return (\r\n        <Paper className=\"info-card types\" elevation={3}>\r\n            <Typography component={'div'}>\r\n                <Grid item className=\"type-row mb-2\" xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={2}>\r\n                            <div className=\"mb-2\"><b>Weak To</b></div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={10}>\r\n                            {typeArray.map((x, index) => {\r\n                                if (x > 1) {\r\n                                    return <div className={`badge badge-${TYPES[index]}`}>{TYPES[index]} <span className={classes.damageValue}>{x}x</span></div>\r\n                                }\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item className=\"type-row mb-2\" xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={2}>\r\n                            <div className=\"mb-2\"><b>Normal Damage</b></div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={10}>\r\n                            {typeArray.map((x, index) => {\r\n                                if (x === 1) {\r\n                                    return <div className={`badge badge-${TYPES[index]}`}>{TYPES[index]} <span className={classes.damageValue}>{x}x</span> </div>\r\n                                }\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item className=\"type-row\" xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={2}>\r\n                            <div className=\"mb-2\"><b>Resistant To</b></div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={10}>\r\n                            {typeArray.map((x, index) => {\r\n                                if (x < 1) {\r\n                                    return <div className={`badge badge-${TYPES[index]}`}>{TYPES[index]} <span className={classes.damageValue}>{x}x</span></div>\r\n                                }\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Typography>\r\n        </Paper>\r\n    )\r\n\r\n}\r\n\r\nexport default TypeEffective","import React, { useState, useEffect } from 'react';\r\nimport StatsChart from './StatsChart';\r\nimport QuickInfo from './QuickInfo';\r\nimport EvolutionChain from './EvolutionChain';\r\nimport Moves from './Moves';\r\nimport TypeEffective from './TypeEffective'\r\nimport userService from '../services/pokemon'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Loader from './Loaders/Loader'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    GridContainer: {\r\n        marginBottom: '1rem',\r\n    },\r\n    PkmEntry: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '3rem',\r\n        },\r\n    },\r\n    PkmSpecies: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            textAlign: 'center',\r\n        },\r\n    }\r\n}));\r\n\r\nconst PokedexEntry = () => {\r\n\r\n    const pokemonKey = useParams().id\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [evolution, setEvolution] = useState([]);\r\n    const [genus, setGenus] = useState(\"\");\r\n    const [types, setTypes] = useState([]);\r\n    const [description, setDescription] = useState();\r\n    const [stats, setStats] = useState([]);\r\n    const [quickInfo, setQuickInfo] = useState({})\r\n    const [moves, setMoves] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            await userService.getPkm(pokemonKey).then((response) => {\r\n                console.log(response);\r\n                setPokemon(response.pkm)\r\n\r\n                let pkm = response.pkm\r\n                let species = response.species\r\n\r\n                let evolutionChain = response.evolutionChain.chain;\r\n                setEvolution(evolutionChain);\r\n\r\n                let genera = species.genera.filter((x) => x.language.name === \"en\")\r\n                setGenus(genera[0].genus)\r\n\r\n                let langDescription = species.flavor_text_entries.filter((x) => x.language.name === \"en\")\r\n                setDescription(langDescription[0].flavor_text)\r\n\r\n                let types = pkm.types.map((x) => x.type.name)\r\n                setTypes(types)\r\n\r\n                let stats = pkm.stats.map((x) => x.base_stat)\r\n                setStats(stats)\r\n\r\n                let moveSet = pkm.moves.map((x) => {\r\n                    let name = x.move.name;\r\n\r\n                    let lastDataModule = x.version_group_details.pop();\r\n                    let learnedAt = lastDataModule.level_learned_at;\r\n                    let method = lastDataModule.move_learn_method.name;\r\n\r\n                    return {\r\n                        move: name,\r\n                        level: learnedAt,\r\n                        method: method,\r\n                    }\r\n                })\r\n\r\n                setMoves(moveSet);\r\n\r\n                let height = pkm.height;\r\n                let weight = pkm.weight;\r\n                let catchRate = species.capture_rate;\r\n                let eggGroups = species.egg_groups.map((x) => x.name)\r\n                let genderRate = species.gender_rate;\r\n                let abilities = pkm.abilities.map((x) => x.ability.name)\r\n\r\n                setQuickInfo({\r\n                    height: height,\r\n                    weight: weight,\r\n                    catchRate: catchRate,\r\n                    eggGroups: eggGroups,\r\n                    genderRate: genderRate,\r\n                    abilities: abilities\r\n                })\r\n\r\n                setIsLoaded(true)\r\n            })\r\n        })();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    //Removes special character issues seen on Chromium based browsers\r\n    function cleanStr(str) {\r\n        return str.replace(/(?:\\r\\f|\\r|\\f)/g, ' ');\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {!isLoaded && <div><Loader variant={'page'} /></div>}\r\n\r\n            {isLoaded &&\r\n                <div className=\"pocketdex-container\">\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            #{pokemon.id}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <div className=\"header-container\">\r\n                            <div className=\"pokedex-image\">\r\n                                {pokemon.sprites.other[\"official-artwork\"].front_default ?\r\n                                    <img src={pokemon.sprites.other[\"official-artwork\"].front_default} /> :\r\n                                    <div className=\"img-placeholder\"></div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"pokemon-entry\">\r\n                                <Typography component={'div'}>\r\n                                    <div className=\"pokemon-header\">\r\n                                        <Typography variant=\"h4\" >\r\n                                            {pokemon.name}\r\n                                        </Typography>\r\n                                        {types.map((x) => {\r\n                                            return <div key={x} className={`badge badge-${x}`}>{x}</div>\r\n                                        })}\r\n                                    </div>\r\n                                </Typography>\r\n\r\n                                <Typography variant=\"h5\" className={classes.PkmSpecies} gutterBottom>\r\n                                    {genus}\r\n                                </Typography>\r\n\r\n                                <Typography variant=\"body1\" gutterBottom>\r\n                                    {cleanStr(description)}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={12}>\r\n                        <StatsChart stats={stats} />\r\n\r\n                        <Grid container spacing={3} className={classes.GridContainer}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <QuickInfo quickInfo={quickInfo} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={6}>\r\n                                <TypeEffective pkmTypes={types} />\r\n                            </Grid>\r\n\r\n                            {/* <Grid item xs={12} md={6}>\r\n                                <EvolutionChain evolutionChain={evolution} />\r\n                            </Grid> */}\r\n                        </Grid>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Moves moves={moves} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid >\r\n                </div>}\r\n\r\n        </React.Fragment >\r\n\r\n    )\r\n}\r\n\r\nexport default PokedexEntry;\r\n\r\n\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Link} from \"react-router-dom\"\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        paddingLeft: '12px',\r\n        marginLeft: '-15px',\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        transition: 'background-color 0.3s',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n            '&:focus': {\r\n                width: '40ch',\r\n            },\r\n        },\r\n        '&::placeholder': {\r\n            opacity: '0.75',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    toolbarRoot: {\r\n        justifyContent: 'space-between',\r\n        margin: '0 auto',\r\n        width: '100%',\r\n        padding: '0px 15px',\r\n        [theme.breakpoints.down('1300px')]: {\r\n            display: 'none'\r\n        },\r\n    },\r\n    appBarRoot: {\r\n        backgroundColor: '#ff4b4b'\r\n    },\r\n    linkStyle:{\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\nconst MenuBar = ({ filterPokemon }) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar className={classes.appBarRoot} position=\"static\">\r\n                <Toolbar className={classes.toolbarRoot}>\r\n                    <Box component=\"div\" alignItems=\"center\" display=\"flex\">\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                <Link className={classes.linkStyle} to={'/'}>Pocketdex</Link>\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"...Search Pokemon\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={(e) => filterPokemon(e)}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuBar;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route\r\n} from \"react-router-dom\"\r\nimport userService from './services/pokemon'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Home from './components/Home'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PokedexEntry from './components/PokedexEntry'\r\nimport MenuBar from './components/MenuBar'\r\nimport FullPokemonList from './fullpokemonList.json'\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: '1440px',\r\n    margin: '0 auto',\r\n    paddingLeft: '15px',\r\n    paddingRight: '15px',\r\n    paddingTop: '1rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: '15px',\r\n      paddingRight: '15px',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [initialPokemonList, setinitialPokemonList] = useState([])\r\n  const [count, setCount] = useState(100);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n\r\n    (async () => {\r\n      await userService.getAll().then((response) => {\r\n        setPokemonList(response)\r\n        setinitialPokemonList(response)\r\n      })\r\n    })();\r\n\r\n  }, []);\r\n\r\n  const fetchMorePokemon = async () => {\r\n    setCount(count + 100)\r\n    let url = `https://pokeapi.co/api/v2/pokemon/?limit=100&offset=${count}`\r\n    let response = await axios.get(url);\r\n    if (response.data.results) {\r\n      let newPokemon = response.data.results;\r\n      setPokemonList(pokemonList.concat(newPokemon))\r\n    }\r\n    return\r\n  }\r\n\r\n  const filterPokemon = (e) => {\r\n    let value = e.target.value;\r\n    if (value) {\r\n      let filterPokemon = FullPokemonList.filter((x) => x.name.includes(value))\r\n      setPokemonList(filterPokemon)\r\n    } else {\r\n      setPokemonList(initialPokemonList)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <MenuBar filterPokemon={filterPokemon} />\r\n        <Grid container className={classes.root}>\r\n          <Switch>\r\n            <Route path=\"/pokedex/:id\">\r\n              <PokedexEntry />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home fetchMorePokemon={fetchMorePokemon} pokemonList={pokemonList} />\r\n            </Route>\r\n          </Switch>\r\n        </Grid>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\n\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 75;","module.exports = __webpack_public_path__ + \"static/media/pokeball.c6b3221b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pikachu-running.6689dc33.gif\";","module.exports = __webpack_public_path__ + \"static/media/male.a69ec844.svg\";","module.exports = __webpack_public_path__ + \"static/media/female.c4a4ae68.svg\";","module.exports = __webpack_public_path__ + \"static/media/physical.65ce3192.svg\";","module.exports = __webpack_public_path__ + \"static/media/special.30e34ffb.svg\";"],"sourceRoot":""}